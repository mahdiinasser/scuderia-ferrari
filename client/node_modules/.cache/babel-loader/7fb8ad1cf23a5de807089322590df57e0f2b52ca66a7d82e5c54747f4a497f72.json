{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahdy\\\\OneDrive\\\\Desktop\\\\scuderia-ferrari\\\\client\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const response = await axios.get('/api/v1/news');\n        setNews(response.data.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching news');\n        setLoading(false);\n      }\n    };\n    fetchNews();\n  }, []);\n  const [editedNews, setEditedNews] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const handleChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedNews(prevEditedNews => ({\n      ...prevEditedNews,\n      [index]: {\n        ...prevEditedNews[index],\n        [name]: value\n      }\n    }));\n  };\n  const handleEdit = () => {\n    setEditMode(true);\n    // Initialize editedNews with current news data\n    const initialEditedNews = {};\n    news.forEach((item, index) => {\n      initialEditedNews[index] = {\n        ...item\n      };\n    });\n    setEditedNews(initialEditedNews);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Update all news items\n      await Promise.all(Object.keys(editedNews).map(async index => {\n        const response = await axios.put(`/api/v1/news/${news[index]._id}`, editedNews[index]);\n        return response.data;\n      }));\n      alert('News updated successfully!');\n      window.location.reload();\n    } catch (err) {\n      console.error('Error updating news:', err);\n      setError(`Error updating news: ${err.message}`);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), editMode && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [news.map((item, index) => {\n        var _editedNews$index, _editedNews$index2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `title${index}`,\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `title${index}`,\n            name: \"title\",\n            value: ((_editedNews$index = editedNews[index]) === null || _editedNews$index === void 0 ? void 0 : _editedNews$index.title) || item.title,\n            onChange: e => handleChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `caption${index}`,\n            children: \"Caption:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `caption${index}`,\n            name: \"caption\",\n            value: ((_editedNews$index2 = editedNews[index]) === null || _editedNews$index2 === void 0 ? void 0 : _editedNews$index2.caption) || item.caption,\n            onChange: e => handleChange(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(News, \"fodxhIH5ylWUj/QeYYmpTMmNg7s=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","News","_s","news","setNews","loading","setLoading","error","setError","fetchNews","response","get","data","err","editedNews","setEditedNews","editMode","setEditMode","handleChange","e","index","name","value","target","prevEditedNews","handleEdit","initialEditedNews","forEach","item","handleSubmit","preventDefault","Promise","all","Object","keys","map","put","_id","alert","window","location","reload","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","_editedNews$index","_editedNews$index2","htmlFor","type","id","title","onChange","caption","_c","$RefreshReg$"],"sources":["C:/Users/mahdy/OneDrive/Desktop/scuderia-ferrari/client/src/components/News.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst News = () => {\r\n    const [news, setNews] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchNews = async () => {\r\n            try {\r\n                const response = await axios.get('/api/v1/news');\r\n                setNews(response.data.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Error fetching news');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNews();\r\n    }, []);\r\n\r\n    const [editedNews, setEditedNews] = useState({});\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const handleChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        setEditedNews((prevEditedNews) => ({\r\n            ...prevEditedNews,\r\n            [index]: {\r\n                ...prevEditedNews[index],\r\n                [name]: value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        setEditMode(true);\r\n        // Initialize editedNews with current news data\r\n        const initialEditedNews = {};\r\n        news.forEach((item, index) => {\r\n            initialEditedNews[index] = { ...item };\r\n        });\r\n        setEditedNews(initialEditedNews);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Update all news items\r\n            await Promise.all(\r\n                Object.keys(editedNews).map(async (index) => {\r\n                    const response = await axios.put(`/api/v1/news/${news[index]._id}`, editedNews[index]);\r\n                    return response.data;\r\n                })\r\n            );\r\n            alert('News updated successfully!');\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.error('Error updating news:', err);\r\n            setError(`Error updating news: ${err.message}`);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Update News</h2>\r\n            <button onClick={handleEdit}>Edit</button>\r\n            {editMode && (\r\n                <form onSubmit={handleSubmit}>\r\n                    {news.map((item, index) => (\r\n                        <div key={index}>\r\n                            <label htmlFor={`title${index}`}>Title:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id={`title${index}`}\r\n                                name=\"title\"\r\n                                value={editedNews[index]?.title || item.title}\r\n                                onChange={(e) => handleChange(e, index)}\r\n                            />\r\n                            <br />\r\n                            <label htmlFor={`caption${index}`}>Caption:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id={`caption${index}`}\r\n                                name=\"caption\"\r\n                                value={editedNews[index]?.caption || item.caption}\r\n                                onChange={(e) => handleChange(e, index)}\r\n                            />\r\n                            <br />\r\n                        </div>\r\n                    ))}\r\n                    <button type=\"submit\">Update News</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}